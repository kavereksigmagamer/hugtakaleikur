import streamlit as st
import random

# --- Hugt√∂k og skilgreiningar ---
hugtok_definitions = {
    "Samf√©lagsfr√¶√∞i": "landafr√¶√∞i og saga √≠ sameiningu, einkum sem grunnsk√≥lafag",
    "Sj√°lfs√æurftarb√∫skapur": "b√∫skapur √æar sem framlei√∞slan fulln√¶gir eigin √æ√∂rfum.",
    "Yfirst√©tt": "s√° h√≥pur √≠ √æj√≥√∞f√©lagi sem hefur mestan au√∞ og v√∂ld.",
    "F√©lagsm√≥tun": "f√©lagsleg samskipti sem hafa m√≥tandi √°hrif √° einstakling.",
    "Val": "√æa√∞ a√∞ velja",
    "Landb√∫na√∞arbyltingin": "T√≠mabil √æegar f√≥lk f√≥r a√∞ stunda landb√∫na√∞.",
    "Barnavinna": "Vinna sem b√∂rn vinna.",
    "Gildi": "√æa√∞ hversu miki√∞ v√¶gi e√∞a ver√∞m√¶ti e-√∞ hefur.",
    "Vi√∞mi√∞": "Setja s√©r vi√∞mi√∞.",
    "Mansal": "√ìl√∂gleg verslun me√∞ f√≥lk.",
    "Sveitaf√©lag": "stj√≥rns√Ωslueining undir stj√≥rn kj√∂rinna fulltr√∫a sem sinnir l√∂gbo√∞num verkefnum svo sem leiksk√≥lum, grunnsk√≥lum, f√©lags√æj√≥nustu, menningarstarfsemi og rekstri dvalarheimila.",
    "Sj√°lfsmynd": "S√∫ mynd sem einstaklingur hefur af sj√°lfum s√©r.",
    "Hnattv√¶√∞ing": "√∫tbrei√∞sla e-s um heiminn allan, einkum √≠ tengslum vi√∞ al√æj√≥√∞lega verslun og samskipti.",
    "Hnattr√¶nn hugsanah√°ttur": "A√∞ hugsa √∫t fr√° heiminum √≠ heild.",
    "Keyta": "√örgangur fr√° d√Ωri.",
    "Formlegt vi√∞mi√∞": "Skr√°√∞ar reglur og l√∂g.",
    "√ìformlegt vi√∞mi√∞": "√ìskr√°√∞ar reglur og venjur.",
    "Formlegt taumhald": "Refsing e√∞a umbun samkv√¶mt l√∂gum.",
    "√ìformlegt taumhald": "Refsing e√∞a umbun sem byggir √° venjum.",
    "Shobono": "Heimili Yan√≥mama f√≥lksins.",
    "Efnishyggja": "s√∫ afsta√∞a a√∞ meta efnislega hluti (eignir, st√∂√∞u) ofar √∂llu √∂√∞ru.",
    "Samf√©lag": "H√≥pur f√≥lks sem b√Ωr saman og hefur samskipti.",
    "N√°tt√∫ra": "Allt sem er ekki skapa√∞ af manni.",
    "Menning": "√æroska e√∞a √ær√≥unarstig mannlegs samf√©lags, andlegt l√≠f √æess og efnisleg g√¶√∞i.",
    "Kynhlutverk": "Hlutverk sem samf√©lagi√∞ tengir vi√∞ kyn.",
    "I√∞nv√¶tt r√≠ki": "R√≠ki √æar sem i√∞na√∞ur er mikilv√¶gur.",
    "√ìi√∞nv√¶tt r√≠ki": "R√≠ki √æar sem i√∞na√∞ur er l√≠til e√∞a engin.",
    "Neyslusamf√©lag": "samf√©lag sem einkennist af mikilli neyslu og √≥h√≥fi.",
    "Sj√°lfb√¶r √ær√≥un": "√ûr√≥un sem tekur mi√∞ af framt√≠√∞inni og n√°tt√∫ru.",
    "Heimsmynd": "Hvernig einstaklingur e√∞a h√≥pur s√©r heiminn.",
    "√ûj√≥nustugreinar": "atvinnugrein √æar sem √æj√≥nusta er veitt, t.d. verslun.",
    "Matars√≥un": "A√∞ henda mat sem hef√∞i m√°tt n√Ωta.",
    "Fr√°viksheg√∞un": "Heg√∞un sem v√≠kur fr√° vi√∞mi√∞um samf√©lagsins.",
    "Afbrot": "r√©ttarbrot sem refsing er l√∂g√∞ vi√∞ √≠ settum l√∂gum, misferli.",
    "R√≠kissaks√≥knari": "emb√¶ttisma√∞ur sem fer me√∞ √°k√¶ruvald √≠ opinberum m√°lum.",
    "R√≠kisl√∂greglustj√≥ri": "√¶√∞sti yfirma√∞ur l√∂greglu og almannavarna √≠ landinu.",
    "R√©ttarr√≠ki": "samf√©lag sem vir√∞ir l√∂g og r√©tt vi√∞ beitingu r√≠kisvalds, hefur √≥h√°√∞a d√≥mst√≥la og tryggir borgurunum r√©ttar√∂ryggi.",
    "H√©ra√∞sd√≥mur": "D√≥mst√≥ll √° √°kve√∞nu sv√¶√∞i.",
    "H√¶stir√©ttur": "√¶√∞sti d√≥mst√≥ll r√≠kis, sem √∫rlausnum h√©ra√∞sd√≥mst√≥la m√° skj√≥ta til.",
    "Skilor√∞sbundi√∞ fangelsi": "Fangelsisd√≥mur sem er ekki afpl√°na√∞ur nema broti√∞ s√© aftur.",
    "√ìskilor√∞sbundi√∞ fangelsi": "Fangelsisd√≥mur sem er afpl√°na√∞ur strax.",
    "Samf√©lags√æj√≥nusta": "Refsing √æar sem einstaklingur vinnur fyrir samf√©lagi√∞.",
    "Allsherjar√æing S√û": "A√∞al√æing Sameinu√∞u √æj√≥√∞anna.",
    "Neitunarvald": "vald til a√∞ st√∂√∞va framgang einhvers, t.d. lagabreytingar, me√∞ √æv√≠ a√∞ sam√æykkja √æa√∞ ekki.",
    "Fri√∞ag√¶slusveitir S√û": "Herli√∞ Sameinu√∞u √æj√≥√∞anna til a√∞ halda fri√∞i.",
    "Mannr√©ttindi": "Grunnr√©ttindi allra manna.",
    "Jafnr√©tti": "A√∞ allir hafi s√∂mu r√©ttindi og t√¶kif√¶ri.",
    "√ûj√≥√∞arr√©ttur": "matarr√©ttur sem er algengur og vins√¶ll hj√° √°kve√∞inni √æj√≥√∞.",
    "Al√æj√≥√∞al√∂gregla": "al√æj√≥√∞astofnun um samstarf √° svi√∞i l√∂gg√¶slu og ranns√≥kna sakam√°la.",
    "Tj√°ningarfrelsi": "frelsi til a√∞ l√°ta sko√∞anir s√≠nar √≠ lj√≥s √≠ r√¶√∞u e√∞a riti, m√°lfrelsi.",
    "Lifandi l√Ω√∞r√¶√∞i": "L√Ω√∞r√¶√∞i √æar sem f√≥lk tekur virkan √æ√°tt."
}

# --- Streamlit setup ---
st.set_page_config(page_title="Hugtaka Spurningaleikur", page_icon="üéØ", layout="centered")
st.markdown("<h1 style='text-align:center;'>üéØ Hugtaka Spurningaleikur</h1>", unsafe_allow_html=True)

# --- Session state setup ---
if "score" not in st.session_state:
    st.session_state.score = 0
if "question_index" not in st.session_state:
    st.session_state.question_index = 0
if "questions" not in st.session_state:
    terms = list(hugtok_definitions.keys())
    random.shuffle(terms)
    questions = []
    for term in terms:
        correct = hugtok_definitions[term]
        wrong = random.sample([hugtok_definitions[t] for t in terms if t != term], 3)
        choices = [correct] + wrong
        random.shuffle(choices)
        questions.append({"term": term, "choices": choices, "answer": correct})
    st.session_state.questions = questions
if "feedback" not in st.session_state:
    st.session_state.feedback = ""

# --- Main logic ---
def next_question(reset=False):
    if reset:
        st.session_state.score = 0
        st.session_state.question_index = 0
        random.shuffle(st.session_state.questions)
    else:
        st.session_state.question_index += 1
    st.session_state.feedback = ""

def check_answer(choice):
    q = st.session_state.questions[st.session_state.question_index]
    if choice == q["answer"]:
        st.session_state.score += 1
        st.session_state.feedback = "‚úÖ R√©tt svar!"
        next_question()
    else:
        st.session_state.feedback = "‚ùå Rangt svar! Byrjar aftur."
        next_question(reset=True)

# --- Display question ---
if st.session_state.question_index >= len(st.session_state.questions):
    st.success(f"üéâ √û√∫ kl√°ra√∞ir leikinn! Lokastig: {st.session_state.score}")
    if st.button("Spila aftur"):
        next_question(reset=True)
else:
    q = st.session_state.questions[st.session_state.question_index]
    st.markdown(f"### Spurning {st.session_state.question_index + 1}/{len(st.session_state.questions)}")
    st.markdown(f"**Hva√∞ √æ√Ω√∞ir hugtaki√∞:** <span style='color:#00ff88; font-weight:bold;'>{q['term']}</span>?", unsafe_allow_html=True)
    choice = st.radio("Veldu svar:", q["choices"], index=None)
    if st.button("Svara"):
        if choice is None:
            st.warning("Veldu svar fyrst.")
        else:
            check_answer(choice)

    if st.session_state.feedback:
        st.info(st.session_state.feedback)

st.markdown(f"### Stig: {st.session_state.score}")
